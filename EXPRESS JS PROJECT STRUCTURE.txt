
********************************************************** EXPRESS JS PROJECT STRUCTURE **********************************************************

****** These are the basic files that ‘ src ’ folder/directory will be holding.

1)config directory-->which keeps all the configs needed for the application. For example, if the app connects to a database, the configuration for the database (like database name and username) can be put in a file like db.config.js

2)Controllers directory--> will be holding the controller files, wherein the controller files deal with validation of the data, whatever that is been sent from the frontend. The request and response handling is taken care in this.

3)middlewares-->where you can define all your route-level middle-wares once and call it in your routes as chained-functions.


4)Models directory--> will be holding files that keeps the schema/data models that is required for your current project.

5)Routes directory--> will be holding the route files, where Routing refers to how an application’s endpoints (URIs) respond to client requests. It basically defines your app routes.

6)Services directory--> will be holding the services files, which deals with the business logic of the API. This is a final filtration before sending it to the Data Access Layer, here we filter the data received into the final payload for querying with the database. The files in this directory will deal with processing the payload to the format, it should be in to be stored into the database.

7)utils directory-->that will have all the utilities and helpers needed for the application. It will also act as a place to put shared logic, if any.

8)validators-->is an Express middleware library that you can incorporate in your apps for server-side data validation.

9)index.js-->is usually your entry point. It's where you import/require all of your modules, and that is it's only function. You may add logic if you wish, but having it only import means you don't ever have to look at it to problem-solve.

10)test directory-->has all the testing code in it.

11)unit directory-->unit folder inside the test folder will have a structure similar to the src folder, as each file in the src folder will need a test.

12)Babel-->Babel is a toolchain that is mainly used to convert ECMAScript 2015+ code into a backwards compatible version of JavaScript in current and older browsers or environments.

13).env-->file is a hidden file that is used to pass environment variables to your application. This file is secret, no one but you can access it, and it can be used to store data that you want to keep private or hidden. For example, you can store API keys from external services or your database URI.

----------------------------------------------------------------------------------------------------------------------------------------------------------





